// 원시 타입
// -> Number, String, Boolean 등
// -> 값 자체로써 변수에 저장되고 복사된다
// -> 불변값이다(메모리 값 수정 X)

// 객체 타입
// -> Object, Array, Function 등
// -> 참조값을 통해 변수에 저장되고 복사된다
// -> 가변값이다(메모리 값 수정 O)

// 객체 타입 주의사항
// 1. 의도치 않게 값이 수정될 수 있다.
let o11 = { name: "눈송이" };
let o22 = o11; // 얕은 복사
o22.name = "홍길동";
// 수정을 방지하려면?
let o222 = { ...o11 }; // 깊은 복사
o222.name = "홍길동";

// 2. 객체 간의 비교는 기본적으로 참조값을 기준으로 이뤄진다.
let o1 = { name: "눈송이" };
let o2 = o1; // 얕은 복사
let o3 = { ...o1 }; // 깊은 복사

console.log(o1 === o2); // T 얕은복사 시 참조값은 같음
console.log(o1 === o3); // F 참조값을 기준을 비교하기 때문에 깊은복사시 참조값이 다르다

console.log(JSON.stringify(o1) === JSON.stringify(o3)); // T 객체의 값을 문자열로 변환하여 비교해서 같은 값임

// 3. 배열과 함수도 사실 객체이다.
// 함수(function) : 호출, 선언
// 배열(array) : 순차 저장, 순회
